// Code generated by "stringer -type=HTTPMethod"; DO NOT EDIT

package parser

import "fmt"
import "encoding/json"

const _HTTPMethod_name = "UNKNOWN_HTTP_METHODGETPOSTPUTDELETE"

var _HTTPMethod_index = [...]uint8{0, 19, 22, 26, 29, 35}

func (i HTTPMethod) String() string {
	if i < 0 || i >= HTTPMethod(len(_HTTPMethod_index)-1) {
		return fmt.Sprintf("HTTPMethod(%d)", i)
	}
	return _HTTPMethod_name[_HTTPMethod_index[i]:_HTTPMethod_index[i+1]]
}

var _HTTPMethodNameToValue_map = map[string]HTTPMethod{
	_HTTPMethod_name[0:19]:  0,
	_HTTPMethod_name[19:22]: 1,
	_HTTPMethod_name[22:26]: 2,
	_HTTPMethod_name[26:29]: 3,
	_HTTPMethod_name[29:35]: 4,
}

func HTTPMethodString(s string) (HTTPMethod, error) {
	if val, ok := _HTTPMethodNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to HTTPMethod values", s)
}

func (i HTTPMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *HTTPMethod) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("HTTPMethod should be a string, got %s", data)
	}

	var err error
	*i, err = HTTPMethodString(s)
	return err
}
